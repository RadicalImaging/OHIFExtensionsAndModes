{"version":3,"sources":["webpack://@radical/site-finding/webpack/universalModuleDefinition","webpack://@radical/site-finding/webpack/bootstrap","webpack://@radical/site-finding/./src/id.js","webpack://@radical/site-finding/./src/index.tsx"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","id","preRegistration","servicesManager","commandsManager","configuration","getPanelModule","extensionManager","getViewportModule","getToolbarModule","getLayoutTemplateModule","getSopClassHandlerModule","getHangingProtocolModule","getCommandsModule","getContextModule","getDataSourcesModule"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,wBAAyB,GAAIH,GACV,iBAAZC,QACdA,QAAQ,yBAA2BD,IAEnCD,EAAK,yBAA2BC,IARlC,CASmB,oBAATK,KAAuBA,KAAOC,MAAM,WAC9C,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUR,QAGnC,IAAIC,EAASK,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQH,GAAUI,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASO,GAG/DN,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAO,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASf,EAASgB,EAAMC,GAC3CV,EAAoBW,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAM,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,q2DChF/CC,E,KAAiBzB,KCGR,WAKbyB,KAQAC,gBAAiB,YAIX,EAHJC,gBAGI,EAFJC,gBAEI,EADJC,eAQFC,eAAgB,YAIV,EAHJH,gBAGI,EAFJC,gBAEI,EADJG,kBAQFC,kBAAmB,YAIb,EAHJL,gBAGI,EAFJC,gBAEI,EADJG,kBAQFE,iBAAkB,YAIZ,EAHJN,gBAGI,EAFJC,gBAEI,EADJG,kBAUFG,wBAAyB,YAInB,EAHJP,gBAGI,EAFJC,gBAEI,EADJG,kBAQFI,yBAA0B,YAIpB,EAHJR,gBAGI,EAFJC,gBAEI,EADJG,kBASFK,yBAA0B,YAIpB,EAHJT,gBAGI,EAFJC,gBAEI,EADJG,kBASFM,kBAAmB,YAIb,EAHJV,gBAGI,EAFJC,gBAEI,EADJG,kBAQFO,iBAAkB,YAIZ,EAHJX,gBAGI,EAFJC,gBAEI,EADJG,kBAOFQ,qBAAsB,YAIhB,EAHJZ,gBAGI,EAFJC,gBAEI,EADJG","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@radical/site-finding\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@radical/site-finding\"] = factory();\n\telse\n\t\troot[\"@radical/site-finding\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import { id } from './id';\n\n/**\n * You can remove any of the following modules if you don't need them.\n */\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   * You ID can be anything you want, but it should be unique.\n   */\n  id,\n\n  /**\n   * Perform any pre-registration tasks here. This is called before the extension\n   * is registered. Usually we run tasks such as: configuring the libraries\n   * (e.g. cornerstone, cornerstoneTools, ...) or registering any services that\n   * this extension is providing.\n   */\n  preRegistration: ({\n    servicesManager,\n    commandsManager,\n    configuration = {},\n  }) => {},\n  /**\n   * PanelModule should provide a list of panels that will be available in OHIF\n   * for Modes to consume and render. Each panel is defined by a {name,\n   * iconName, iconLabel, label, component} object. Example of a panel module\n   * is the StudyBrowserPanel that is provided by the default extension in OHIF.\n   */\n  getPanelModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * ViewportModule should provide a list of viewports that will be available in OHIF\n   * for Modes to consume and use in the viewports. Each viewport is defined by\n   * {name, component} object. Example of a viewport module is the CornerstoneViewport\n   * that is provided by the Cornerstone extension in OHIF.\n   */\n  getViewportModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * ToolbarModule should provide a list of tool buttons that will be available in OHIF\n   * for Modes to consume and use in the toolbar. Each tool button is defined by\n   * {name, defaultComponent, clickHandler }. Examples include radioGroupIcons and\n   * splitButton toolButton that the default extension is providing.\n   */\n  getToolbarModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * LayoutTemplateMOdule should provide a list of layout templates that will be\n   * available in OHIF for Modes to consume and use to layout the viewer.\n   * Each layout template is defined by a { name, id, component}. Examples include\n   * the default layout template provided by the default extension which renders\n   * a Header, left and right sidebars, and a viewport section in the middle\n   * of the viewer.\n   */\n  getLayoutTemplateModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * SopClassHandlerModule should provide a list of sop class handlers that will be\n   * available in OHIF for Modes to consume and use to create displaySets from Series.\n   * Each sop class handler is defined by a { name, sopClassUids, getDisplaySetsFromSeries}.\n   * Examples include the default sop class handler provided by the default extension\n   */\n  getSopClassHandlerModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * HangingProtocolModule should provide a list of hanging protocols that will be\n   * available in OHIF for Modes to use to decide on the structure of the viewports\n   * and also the series that hung in the viewports. Each hanging protocol is defined by\n   * { name, protocols}. Examples include the default hanging protocol provided by\n   * the default extension that shows 2x2 viewports.\n   */\n  getHangingProtocolModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * CommandsModule should provide a list of commands that will be available in OHIF\n   * for Modes to consume and use in the viewports. Each command is defined by\n   * an object of { actions, definitions, defaultContext } where actions is an\n   * object of functions, definitions is an object of available commands, their\n   * options, and defaultContext is the default context for the command to run against.\n   */\n  getCommandsModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * ContextModule should provide a list of context that will be available in OHIF\n   * and will be provided to the Modes. A context is a state that is shared OHIF.\n   * Context is defined by an object of { name, context, provider }. Examples include\n   * the measurementTracking context provided by the measurementTracking extension.\n   */\n  getContextModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n  /**\n   * DataSourceModule should provide a list of data sources to be used in OHIF.\n   * DataSources can be used to map the external data formats to the OHIF's\n   * native format. DataSources are defined by an object of { name, type, createDataSource }.\n   */\n  getDataSourcesModule: ({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n  }) => {},\n};\n"],"sourceRoot":""}